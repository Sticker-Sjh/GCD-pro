2025/06/05 10:27:06 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1157063486
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.2
    NVCC: Cuda compilation tools, release 12.2, V12.2.91
    MSVC: 用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.36.32537 版
    GCC: n/a
    PyTorch: 1.12.1
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192829337
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/cb/pytorch_1000000000000/work/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.13.1
    OpenCV: 4.8.1
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1157063486
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/06/05 10:27:07 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=8, enable=False)
backend_args = None
data_root = 'E:/sjh2/GCD-main/data/coco/'
dataset_type = 'CocoIncDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=1,
        save_optimizer=False,
        save_param_scheduler=False,
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='GroundingVisualizationHook'))
default_scope = 'mmdet'
end = 1
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
lang_model_name = 'bert-base-uncased'
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 12
model = dict(
    as_two_stage=True,
    backbone=dict(
        attn_drop_rate=0.0,
        convert_weights=True,
        depths=[
            2,
            2,
            6,
            2,
        ],
        drop_path_rate=0.2,
        drop_rate=0.0,
        embed_dims=96,
        frozen_stages=-1,
        init_cfg=dict(
            checkpoint='E:\\sjh\\model\\swin_tiny_patch4_window7_224.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            3,
            6,
            12,
            24,
        ],
        out_indices=(
            1,
            2,
            3,
        ),
        patch_norm=True,
        qk_scale=None,
        qkv_bias=True,
        type='SwinTransformer',
        window_size=7,
        with_cp=True),
    bbox_head=dict(
        contrastive_cfg=dict(bias=None, log_scale=None, max_text_len=256),
        loss_bbox=dict(loss_weight=5.0, type='L1Loss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        loss_iou=dict(loss_weight=2.0, type='GIoULoss'),
        setting='cur_text',
        sync_cls_avg_factor=True,
        trunc_class=[
            0,
            1,
        ],
        type='GroundingDINOHead_inc'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_mask=False,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    decoder=dict(
        layer_cfg=dict(
            cross_attn_cfg=dict(dropout=0.0, embed_dims=256, num_heads=8),
            cross_attn_text_cfg=dict(dropout=0.0, embed_dims=256, num_heads=8),
            ffn_cfg=dict(
                embed_dims=256, feedforward_channels=2048, ffn_drop=0.0),
            self_attn_cfg=dict(dropout=0.0, embed_dims=256, num_heads=8)),
        num_layers=6,
        post_norm_cfg=None,
        return_intermediate=True),
    dn_cfg=dict(
        box_noise_scale=1.0,
        group_cfg=dict(dynamic=True, num_dn_queries=100, num_groups=None),
        label_noise_scale=0.5),
    encoder=dict(
        fusion_layer_cfg=dict(
            embed_dim=1024,
            init_values=0.0001,
            l_dim=256,
            num_heads=4,
            v_dim=256),
        layer_cfg=dict(
            ffn_cfg=dict(
                embed_dims=256, feedforward_channels=2048, ffn_drop=0.0),
            self_attn_cfg=dict(dropout=0.0, embed_dims=256, num_levels=4)),
        num_cp=6,
        num_layers=6,
        text_layer_cfg=dict(
            ffn_cfg=dict(
                embed_dims=256, feedforward_channels=1024, ffn_drop=0.0),
            self_attn_cfg=dict(dropout=0.0, embed_dims=256, num_heads=4))),
    frozen_cfg=dict(
        backbone_frozen=False,
        decoder_frozen=False,
        encoder_frozen=False,
        head_frozen=False,
        language_model_frozen=True,
        neck_frozen=False),
    language_model=dict(
        add_pooling_layer=False,
        name='bert-base-uncased',
        pad_to_max=False,
        special_tokens_list=[
            '[CLS]',
            '[SEP]',
            '.',
            '?',
        ],
        type='BertModel',
        use_sub_sentence_represent=True),
    neck=dict(
        act_cfg=None,
        bias=True,
        in_channels=[
            192,
            384,
            768,
        ],
        kernel_size=1,
        norm_cfg=dict(num_groups=32, type='GN'),
        num_outs=4,
        out_channels=256,
        type='ChannelMapper'),
    num_queries=900,
    positional_encoding=dict(
        normalize=True, num_feats=128, offset=0.0, temperature=20),
    test_cfg=dict(max_per_img=300),
    train_cfg=dict(
        assigner=dict(
            match_costs=[
                dict(type='BinaryFocalLossCost', weight=2.0),
                dict(box_format='xywh', type='BBoxL1Cost', weight=5.0),
                dict(iou_mode='giou', type='IoUCost', weight=2.0),
            ],
            type='HungarianAssigner')),
    type='GroundingDINO_inc',
    with_box_refine=True)
optim_wrapper = dict(
    clip_grad=dict(max_norm=0.1, norm_type=2),
    loss_scale='dynamic',
    optimizer=dict(lr=0.0001, type='AdamW', weight_decay=0.0001),
    paramwise_cfg=dict(
        custom_keys=dict(
            absolute_pos_embed=dict(decay_mult=0.0),
            backbone=dict(lr_mult=0.1),
            language_model=dict(lr_mult=0.1))),
    type='AmpOptimWrapper')
param_scheduler = [
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            11,
        ],
        type='MultiStepLR'),
]
pretrained = 'E:\\sjh\\model\\swin_tiny_patch4_window7_224.pth'
resume = False
start = 0
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=4,
    dataset=dict(
        ann_file='annotations/1+1+1+1/val_0.json',
        backend_args=None,
        data_prefix=dict(img='val2017/'),
        data_root='E:/sjh2/GCD-main/data/coco/',
        end=1,
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        setting='full_text',
        start=0,
        test_mode=True,
        type='CocoIncDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='E:/sjh2/GCD-main/data/coco/annotations/1+1+1+1/val_0.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='IncCocoMetric')
test_pipeline = [
    dict(
        backend_args=None, imdecode_backend='pillow',
        type='LoadImageFromFile'),
    dict(
        backend='pillow',
        keep_ratio=True,
        scale=(
            800,
            1333,
        ),
        type='FixScaleResize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'text',
            'custom_entities',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=8,
    dataset=dict(
        ann_file='annotations/1+1+1+1/train_0.json',
        backend_args=None,
        data_prefix=dict(img='train2017/'),
        data_root='E:/sjh2/GCD-main/data/coco/',
        end=1,
        filter_cfg=dict(filter_empty_gt=False, min_size=32),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(prob=0.5, type='RandomFlip'),
            dict(
                transforms=[
                    [
                        dict(
                            keep_ratio=True,
                            scales=[
                                (
                                    480,
                                    1333,
                                ),
                                (
                                    512,
                                    1333,
                                ),
                                (
                                    544,
                                    1333,
                                ),
                                (
                                    576,
                                    1333,
                                ),
                                (
                                    608,
                                    1333,
                                ),
                                (
                                    640,
                                    1333,
                                ),
                                (
                                    672,
                                    1333,
                                ),
                                (
                                    704,
                                    1333,
                                ),
                                (
                                    736,
                                    1333,
                                ),
                                (
                                    768,
                                    1333,
                                ),
                                (
                                    800,
                                    1333,
                                ),
                            ],
                            type='RandomChoiceResize'),
                    ],
                    [
                        dict(
                            keep_ratio=True,
                            scales=[
                                (
                                    400,
                                    4200,
                                ),
                                (
                                    500,
                                    4200,
                                ),
                                (
                                    600,
                                    4200,
                                ),
                            ],
                            type='RandomChoiceResize'),
                        dict(
                            allow_negative_crop=True,
                            crop_size=(
                                384,
                                600,
                            ),
                            crop_type='absolute_range',
                            type='RandomCrop'),
                        dict(
                            keep_ratio=True,
                            scales=[
                                (
                                    480,
                                    1333,
                                ),
                                (
                                    512,
                                    1333,
                                ),
                                (
                                    544,
                                    1333,
                                ),
                                (
                                    576,
                                    1333,
                                ),
                                (
                                    608,
                                    1333,
                                ),
                                (
                                    640,
                                    1333,
                                ),
                                (
                                    672,
                                    1333,
                                ),
                                (
                                    704,
                                    1333,
                                ),
                                (
                                    736,
                                    1333,
                                ),
                                (
                                    768,
                                    1333,
                                ),
                                (
                                    800,
                                    1333,
                                ),
                            ],
                            type='RandomChoiceResize'),
                    ],
                ],
                type='RandomChoice'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'flip',
                    'flip_direction',
                    'text',
                    'custom_entities',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        setting='cur_text',
        start=0,
        type='CocoIncDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(prob=0.5, type='RandomFlip'),
    dict(
        transforms=[
            [
                dict(
                    keep_ratio=True,
                    scales=[
                        (
                            480,
                            1333,
                        ),
                        (
                            512,
                            1333,
                        ),
                        (
                            544,
                            1333,
                        ),
                        (
                            576,
                            1333,
                        ),
                        (
                            608,
                            1333,
                        ),
                        (
                            640,
                            1333,
                        ),
                        (
                            672,
                            1333,
                        ),
                        (
                            704,
                            1333,
                        ),
                        (
                            736,
                            1333,
                        ),
                        (
                            768,
                            1333,
                        ),
                        (
                            800,
                            1333,
                        ),
                    ],
                    type='RandomChoiceResize'),
            ],
            [
                dict(
                    keep_ratio=True,
                    scales=[
                        (
                            400,
                            4200,
                        ),
                        (
                            500,
                            4200,
                        ),
                        (
                            600,
                            4200,
                        ),
                    ],
                    type='RandomChoiceResize'),
                dict(
                    allow_negative_crop=True,
                    crop_size=(
                        384,
                        600,
                    ),
                    crop_type='absolute_range',
                    type='RandomCrop'),
                dict(
                    keep_ratio=True,
                    scales=[
                        (
                            480,
                            1333,
                        ),
                        (
                            512,
                            1333,
                        ),
                        (
                            544,
                            1333,
                        ),
                        (
                            576,
                            1333,
                        ),
                        (
                            608,
                            1333,
                        ),
                        (
                            640,
                            1333,
                        ),
                        (
                            672,
                            1333,
                        ),
                        (
                            704,
                            1333,
                        ),
                        (
                            736,
                            1333,
                        ),
                        (
                            768,
                            1333,
                        ),
                        (
                            800,
                            1333,
                        ),
                    ],
                    type='RandomChoiceResize'),
            ],
        ],
        type='RandomChoice'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'flip',
            'flip_direction',
            'text',
            'custom_entities',
        ),
        type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=4,
    dataset=dict(
        ann_file='annotations/1+1+1+1/val_0.json',
        backend_args=None,
        data_prefix=dict(img='val2017/'),
        data_root='E:/sjh2/GCD-main/data/coco/',
        end=1,
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        setting='full_text',
        start=0,
        test_mode=True,
        type='CocoIncDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='E:/sjh2/GCD-main/data/coco/annotations/1+1+1+1/val_0.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='IncCocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/1+1+1+1\\step_0'

2025/06/05 10:27:45 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/06/05 10:27:45 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) GroundingVisualizationHook         
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) GroundingVisualizationHook         
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.projection.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.projection.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.projection.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.projection.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.projection.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.projection.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.norm.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.norm.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.norm.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.norm.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.norm.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.patch_embed.norm.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.0.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.blocks.1.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.downsample.norm.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.downsample.norm.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.downsample.norm.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.downsample.norm.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.downsample.norm.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.downsample.norm.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.downsample.reduction.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.downsample.reduction.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.0.downsample.reduction.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.0.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.blocks.1.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.downsample.norm.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.downsample.norm.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.downsample.norm.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.downsample.norm.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.downsample.norm.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.downsample.norm.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.downsample.reduction.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.downsample.reduction.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.1.downsample.reduction.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.0.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.1.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.2.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.3.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.4.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.blocks.5.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.downsample.norm.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.downsample.norm.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.downsample.norm.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.downsample.norm.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.downsample.norm.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.downsample.norm.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.downsample.reduction.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.downsample.reduction.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.2.downsample.reduction.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.0.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.relative_position_bias_table:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.relative_position_bias_table:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.relative_position_bias_table:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.qkv.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.qkv.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.qkv.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.qkv.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.qkv.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.qkv.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.proj.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.proj.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.proj.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.proj.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.proj.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.attn.w_msa.proj.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.0.0.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.0.0.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.0.0.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.0.0.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.0.0.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.0.0.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.stages.3.blocks.1.ffn.layers.1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm1.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm1.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm1.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm1.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm1.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm1.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm2.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm2.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm2.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm2.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm2.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm2.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm3.weight:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm3.weight:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm3.weight:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm3.bias:lr=1e-05
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm3.bias:weight_decay=0.0001
2025/06/05 10:27:48 - mmengine - INFO - paramwise_options -- backbone.norm3.bias:lr_mult=0.1
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.embeddings.word_embeddings.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.embeddings.position_embeddings.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.embeddings.token_type_embeddings.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.embeddings.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.embeddings.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.0.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.1.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.2.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.3.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.4.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.5.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.6.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.7.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.8.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.9.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.10.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.self.query.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.self.query.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.self.key.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.self.key.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.self.value.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.self.value.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.intermediate.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.intermediate.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.output.dense.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.output.dense.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.output.LayerNorm.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - language_model.language_backbone.body.model.encoder.layer.11.output.LayerNorm.bias is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - text_feat_map.weight is skipped since its requires_grad=False
2025/06/05 10:27:48 - mmengine - WARNING - text_feat_map.bias is skipped since its requires_grad=False
2025/06/05 10:27:53 - mmengine - INFO - Loads checkpoint by local backend from path: E:\sjh\model\swin_tiny_patch4_window7_224.pth
Name of parameter - Initialization information

level_embed - torch.Size([4, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

backbone.patch_embed.projection.weight - torch.Size([96, 3, 4, 4]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.patch_embed.projection.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.patch_embed.norm.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.patch_embed.norm.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.norm1.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.norm1.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.relative_position_bias_table - torch.Size([169, 3]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.qkv.weight - torch.Size([288, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.qkv.bias - torch.Size([288]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.proj.weight - torch.Size([96, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.proj.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.norm2.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.norm2.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.ffn.layers.0.0.weight - torch.Size([384, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.ffn.layers.0.0.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.ffn.layers.1.weight - torch.Size([96, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.ffn.layers.1.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.norm1.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.norm1.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.relative_position_bias_table - torch.Size([169, 3]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.qkv.weight - torch.Size([288, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.qkv.bias - torch.Size([288]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.proj.weight - torch.Size([96, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.proj.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.norm2.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.norm2.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.ffn.layers.0.0.weight - torch.Size([384, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.ffn.layers.0.0.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.ffn.layers.1.weight - torch.Size([96, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.ffn.layers.1.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.downsample.norm.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.downsample.norm.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.downsample.reduction.weight - torch.Size([192, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.norm1.weight - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.norm1.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.relative_position_bias_table - torch.Size([169, 6]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.qkv.weight - torch.Size([576, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.qkv.bias - torch.Size([576]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.proj.weight - torch.Size([192, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.proj.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.norm2.weight - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.norm2.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.ffn.layers.0.0.weight - torch.Size([768, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.ffn.layers.0.0.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.ffn.layers.1.weight - torch.Size([192, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.ffn.layers.1.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.norm1.weight - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.norm1.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.relative_position_bias_table - torch.Size([169, 6]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.qkv.weight - torch.Size([576, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.qkv.bias - torch.Size([576]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.proj.weight - torch.Size([192, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.proj.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.norm2.weight - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.norm2.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.ffn.layers.0.0.weight - torch.Size([768, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.ffn.layers.0.0.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.ffn.layers.1.weight - torch.Size([192, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.ffn.layers.1.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.downsample.norm.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.downsample.norm.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.downsample.reduction.weight - torch.Size([384, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.downsample.norm.weight - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.downsample.norm.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.downsample.reduction.weight - torch.Size([768, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.norm1.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.norm1.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.relative_position_bias_table - torch.Size([169, 24]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.qkv.weight - torch.Size([2304, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.qkv.bias - torch.Size([2304]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.proj.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.proj.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.norm2.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.norm2.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.ffn.layers.0.0.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.ffn.layers.0.0.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.ffn.layers.1.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.ffn.layers.1.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.norm1.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.norm1.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.relative_position_bias_table - torch.Size([169, 24]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.qkv.weight - torch.Size([2304, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.qkv.bias - torch.Size([2304]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.proj.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.proj.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.norm2.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.norm2.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.ffn.layers.0.0.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.ffn.layers.0.0.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.ffn.layers.1.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.ffn.layers.1.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.norm1.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

backbone.norm1.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

backbone.norm2.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

backbone.norm2.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

backbone.norm3.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

backbone.norm3.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.convs.0.conv.weight - torch.Size([256, 192, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.convs.1.conv.weight - torch.Size([256, 384, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.convs.2.conv.weight - torch.Size([256, 768, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.extra_convs.0.conv.weight - torch.Size([256, 768, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.extra_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

neck.extra_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.0.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.0.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.0.4.weight - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.0.4.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.1.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.1.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.1.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.1.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.1.4.weight - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.1.4.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.2.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.2.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.2.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.2.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.2.4.weight - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.2.4.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.3.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.3.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.3.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.3.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.3.4.weight - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.3.4.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.4.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.4.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.4.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.4.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.4.4.weight - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.4.4.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.5.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.5.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.5.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.5.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.5.4.weight - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.5.4.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.6.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.6.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.6.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.6.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

bbox_head.reg_branches.6.4.weight - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

bbox_head.reg_branches.6.4.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in GroundingDINOHead_inc  

encoder.layers.0.self_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.self_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.self_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.self_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.self_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.self_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.self_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.self_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.self_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.self_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.self_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.self_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.self_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.self_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.self_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.self_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.self_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.self_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.self_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.self_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.self_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.self_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.self_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.self_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.self_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.self_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.self_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.self_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.self_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.self_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.self_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.self_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.self_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.self_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.self_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.self_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.ffn.layers.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.ffn.layers.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.ffn.layers.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.ffn.layers.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.ffn.layers.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.ffn.layers.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.text_layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.gamma_v - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.gamma_l - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.layer_norm_v.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.layer_norm_v.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.layer_norm_l.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.layer_norm_l.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.values_v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.values_v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.values_l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.values_l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.out_v_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.out_v_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.out_l_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.0.attn.out_l_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.gamma_v - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.gamma_l - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.layer_norm_v.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.layer_norm_v.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.layer_norm_l.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.layer_norm_l.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.values_v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.values_v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.values_l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.values_l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.out_v_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.out_v_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.out_l_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.1.attn.out_l_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.gamma_v - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.gamma_l - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.layer_norm_v.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.layer_norm_v.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.layer_norm_l.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.layer_norm_l.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.values_v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.values_v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.values_l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.values_l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.out_v_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.out_v_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.out_l_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.2.attn.out_l_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.gamma_v - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.gamma_l - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.layer_norm_v.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.layer_norm_v.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.layer_norm_l.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.layer_norm_l.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.values_v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.values_v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.values_l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.values_l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.out_v_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.out_v_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.out_l_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.3.attn.out_l_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.gamma_v - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.gamma_l - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.layer_norm_v.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.layer_norm_v.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.layer_norm_l.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.layer_norm_l.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.values_v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.values_v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.values_l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.values_l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.out_v_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.out_v_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.out_l_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.4.attn.out_l_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.gamma_v - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.gamma_l - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.layer_norm_v.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.layer_norm_v.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.layer_norm_l.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.layer_norm_l.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.values_v_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.values_v_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.values_l_proj.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.values_l_proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.out_v_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.out_v_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.out_l_proj.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

encoder.fusion_layers.5.attn.out_l_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn_text.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn_text.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn_text.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn_text.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.cross_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.norms.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.0.norms.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn_text.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn_text.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn_text.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn_text.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.cross_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.norms.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.1.norms.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn_text.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn_text.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn_text.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn_text.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.cross_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.norms.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.2.norms.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn_text.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn_text.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn_text.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn_text.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.cross_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.norms.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.3.norms.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn_text.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn_text.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn_text.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn_text.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.cross_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.norms.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.4.norms.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn_text.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn_text.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn_text.attn.out_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn_text.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn.value_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn.output_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.cross_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.ffn.layers.1.weight - torch.Size([256, 2048]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.norms.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.layers.5.norms.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.ref_point_head.layers.0.weight - torch.Size([256, 512]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.ref_point_head.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.ref_point_head.layers.1.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.ref_point_head.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

decoder.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

query_embedding.weight - torch.Size([900, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

memory_trans_fc.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

memory_trans_fc.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

memory_trans_norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

memory_trans_norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.embeddings.word_embeddings.weight - torch.Size([30522, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.embeddings.position_embeddings.weight - torch.Size([512, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.embeddings.token_type_embeddings.weight - torch.Size([2, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.embeddings.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.embeddings.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.0.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.1.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.2.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.3.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.4.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.5.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.6.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.7.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.8.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.9.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.10.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.self.query.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.self.key.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.self.value.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.output.dense.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.intermediate.dense.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.output.dense.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

language_model.language_backbone.body.model.encoder.layer.11.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

text_feat_map.weight - torch.Size([256, 768]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

text_feat_map.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  

dn_query_generator.label_embedding.weight - torch.Size([1, 256]): 
The value is the same before and after calling `init_weights` of GroundingDINO_inc  
2025/06/05 10:27:55 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/06/05 10:27:55 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/06/05 10:27:55 - mmengine - INFO - Checkpoints will be saved to E:\sjh2\GCD-main\tools\work_dirs\1+1+1+1\step_0.
2025/06/05 10:44:53 - mmengine - INFO - Epoch(train)  [1][ 50/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 1 day, 9:43:23  time: 20.3628  data_time: 0.3940  memory: 12145  grad_norm: nan  loss: 1360561.6384  loss_cls: 175979.2581  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 96300.6385  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 191813.5750  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 326418.3450  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 314697.2313  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 181440.2375  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 73912.3619  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 11:01:49 - mmengine - INFO - Epoch(train)  [1][100/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 1 day, 9:23:56  time: 20.3127  data_time: 0.0080  memory: 14578  grad_norm: 0.0000  loss: 0.0000  loss_cls: 0.0000  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 0.0000  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 0.0000  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 0.0000  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 0.0000  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 0.0000  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 0.0000  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 11:13:42 - mmengine - INFO - Epoch(train)  [1][150/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 1 day, 5:48:48  time: 14.2522  data_time: 0.0077  memory: 14143  grad_norm: 0.0000  loss: 0.0000  loss_cls: 0.0000  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 0.0000  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 0.0000  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 0.0000  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 0.0000  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 0.0000  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 0.0000  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 11:24:13 - mmengine - INFO - Epoch(train)  [1][200/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 1 day, 3:15:47  time: 12.6208  data_time: 0.0075  memory: 13167  grad_norm: 0.0000  loss: 0.0000  loss_cls: 0.0000  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 0.0000  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 0.0000  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 0.0000  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 0.0000  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 0.0000  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 0.0000  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 11:35:16 - mmengine - INFO - Epoch(train)  [1][250/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 1 day, 1:52:05  time: 13.2616  data_time: 0.0076  memory: 13116  grad_norm: 0.0000  loss: 0.0000  loss_cls: 0.0000  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 0.0000  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 0.0000  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 0.0000  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 0.0000  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 0.0000  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 0.0000  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 11:45:46 - mmengine - INFO - Epoch(train)  [1][300/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 1 day, 0:42:20  time: 12.6150  data_time: 0.0076  memory: 13111  grad_norm: 0.0000  loss: 0.0000  loss_cls: 0.0000  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 0.0000  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 0.0000  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 0.0000  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 0.0000  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 0.0000  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 0.0000  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 11:56:28 - mmengine - INFO - Epoch(train)  [1][350/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 23:52:21  time: 12.8250  data_time: 0.0077  memory: 13247  grad_norm: 0.0000  loss: 0.0000  loss_cls: 0.0000  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 0.0000  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 0.0000  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 0.0000  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 0.0000  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 0.0000  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 0.0000  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 12:06:57 - mmengine - INFO - Epoch(train)  [1][400/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 23:09:21  time: 12.5832  data_time: 0.0074  memory: 12382  grad_norm: 0.0000  loss: 0.0000  loss_cls: 0.0000  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 0.0000  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 0.0000  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 0.0000  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 0.0000  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 0.0000  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 0.0000  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 12:18:17 - mmengine - INFO - Epoch(train)  [1][450/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 22:44:07  time: 13.6056  data_time: 0.0076  memory: 14873  grad_norm: 0.0000  loss: 0.0000  loss_cls: 0.0000  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 0.0000  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 0.0000  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 0.0000  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 0.0000  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 0.0000  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 0.0000  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 12:29:25 - mmengine - INFO - Epoch(train)  [1][500/501]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 22:19:19  time: 13.3520  data_time: 0.0073  memory: 14145  grad_norm: 0.0000  loss: 0.0000  loss_cls: 0.0000  loss_bbox: 0.0000  loss_iou: 0.0000  d0.loss_cls: 0.0000  d0.loss_bbox: 0.0000  d0.loss_iou: 0.0000  d1.loss_cls: 0.0000  d1.loss_bbox: 0.0000  d1.loss_iou: 0.0000  d2.loss_cls: 0.0000  d2.loss_bbox: 0.0000  d2.loss_iou: 0.0000  d3.loss_cls: 0.0000  d3.loss_bbox: 0.0000  d3.loss_iou: 0.0000  d4.loss_cls: 0.0000  d4.loss_bbox: 0.0000  d4.loss_iou: 0.0000  enc_loss_cls: 0.0000  enc_loss_bbox: 0.0000  enc_loss_iou: 0.0000  dn_loss_cls: 0.0000  dn_loss_bbox: 0.0000  dn_loss_iou: 0.0000  d0.dn_loss_cls: 0.0000  d0.dn_loss_bbox: 0.0000  d0.dn_loss_iou: 0.0000  d1.dn_loss_cls: 0.0000  d1.dn_loss_bbox: 0.0000  d1.dn_loss_iou: 0.0000  d2.dn_loss_cls: 0.0000  d2.dn_loss_bbox: 0.0000  d2.dn_loss_iou: 0.0000  d3.dn_loss_cls: 0.0000  d3.dn_loss_bbox: 0.0000  d3.dn_loss_iou: 0.0000  d4.dn_loss_cls: 0.0000  d4.dn_loss_bbox: 0.0000  d4.dn_loss_iou: 0.0000
2025/06/05 12:29:28 - mmengine - INFO - Exp name: config_step0_20250605_102701
2025/06/05 12:29:28 - mmengine - INFO - Saving checkpoint at 1 epochs
